{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Documenta\u00e7\u00e3o Documenta\u00e7\u00e3o","title":"In\u00edcio"},{"location":"#documentacao","text":"Documenta\u00e7\u00e3o","title":"Documenta\u00e7\u00e3o"},{"location":"about/","text":"Documenta\u00e7\u00e3o v.1","title":"Sobre"},{"location":"postgres/","text":"POSTGRES - POSTGIS POSTGRES - POSTGIS Postgres Chaves INSERT UPDATE DELETE insert update delete Alterar Ordenar de Colunas Fun\u00e7\u00f5es Formatar datas Array Permiss\u00f5es Tabelas de sistema Gloss\u00e1rio Postgis Geometrias Informa\u00e7\u00e3o geral Criar / adicionar Alterar Actualizar Fun\u00e7\u00f5es Pontos Linhas Seleccionar valores Z raster Converter Apagar Transforma\u00e7\u00e3o de SRIDs Grelhas NTv2 Transforma\u00e7\u00e3o directa Raster Carregar raster para a base de dados Tutoriais Postgres Chaves -------------------------------------------------------- -- Chaves -------------------------------------------------------- -- Adicionar chave prim\u00e1ria ALTER TABLE \"Rede\" . sinalizacao ADD CONSTRAINT imagens_infra_estradas_pkey PRIMARY KEY ( id ) -- Adicionar chave estrangeira ALTER TABLE \"Rede\" . sinalizacao DROP CONSTRAINT fk_sina_tipo , ADD CONSTRAINT fk_sina_tipo FOREIGN KEY ( tipo ) REFERENCES \"Rede\" . sina_tipo ( tipo ) -- origem ON UPDATE CASCADE ON DELETE SET NULL -- este colaca nulo DEFERRABLE INITIALLY DEFERRED ; -- Outras op\u00e7\u00f5es ON DELETE SET NULL -- este colaca nulo ON DELETE CASCADE -- este apaga --Adicionar coluna para valor \u00fanico ALTER TABLE \"Rede\" . sinalizacao ADD CONSTRAINT const_sinalizacao_cod UNIQUE ( cod ) INSERT UPDATE DELETE insert -- Inserir diferen\u00e7a apenas nos dados que diferem -- entre duas tabelas \"iguais\" ou vista INSERT INTO eq . tabeladestino SELECT * FROM (( SELECT * FROM eq . tabelaorigem o ) -- ou vista EXCEPT ( SELECT * FROM eq . tabeladestino d )) AS s update -------------------------------------------------------- -- UPDATE REPLACE -- SET coluna = REPLACE(coluna,'texto velho','texto novo') -------------------------------------------------------- UPDATE \"Rede\" . sinalizacao SET dgv = REPLACE ( dgv , 'S:' , 'S:' ) -------------------------------------------------------- -- UPDATE com a \"soma\" de sinais associados ao suporte -- preenche o \"n_sinais_associados\" na tabela \"suporte\" -------------------------------------------------------- UPDATE \"RedeV\" . suporte u --3 SET n_sinais_associados = soma FROM -- inicio da consulta ( SELECT s . cod , COUNT ( s . cod ):: int as soma FROM \"Rede\" . suporte s LEFT JOIN \"Rede\" . sinalizacao_municipal t ON ( s . cod = t . cod_suporte ) WHERE ( s . cod = t . cod_suporte ) -- limitar registos na consulta GROUP BY s . cod ) consulta WHERE u . cod = consulta . cod ; -- seleccionar dados correctos -- Fim da consulta delete -------------------------------------------------------- -- Apagar diferen\u00e7a entre \"gdo.gfieldmapping\" e \"gdo.vm_gfieldmapping\" -------------------------------------------------------- DELETE FROM gdo . gfieldmapping WHERE concat (( gfieldmapping . f_table_schema :: text || '.' :: text ) || gfieldmapping . f_table_name :: text ) = ( SELECT concat (( s . f_table_schema :: text || '.' :: text ) || s . f_table_name :: text ) as s FROM (( SELECT * from gdo . gfieldmapping vm ) EXCEPT ( SELECT * from gdo . vm_gfieldmapping g )) as s ) -- OU -- WHERE concat((gfieldmapping.f_table_schema::text || '.'::text) || gfieldmapping.f_table_name::text)='sqm.toponimia_igp25k' Alterar -------------------------------------------------------- -- ALTERAR TIPO -------------------------------------------------------- ALTER TABLE \"Rede\" . sinalizacao ALTER COLUMN id TYPE integer USING id :: integer -------------------------------------------------------- -- Mudar Tipo de dados de uma coluna -------------------------------------------------------- ALTER TABLE \"PM\" . \"FGC\" ALTER COLUMN desc_fgc TYPE integer USING desc_fgc :: integer ; ALTER TABLE \"3D\" . pontos_unido ALTER COLUMN coluna TYPE text USING coluna :: text ; ALTER TABLE \"3D\" . pontos_unido ALTER COLUMN text TYPE numeric ( 10 , 2 ) USING text :: numeric ( 10 , 2 ); ALTER TABLE \"sqm\" . labels ALTER COLUMN \"name\" TYPE text USING \"name\" :: text ; Ordenar de Colunas -- criar vista materializada com a ordem pretendida CREATE VIEW \"sqm\" . tbl_vm AS SELECT a . id , a . numero , a . tipo , a . ano , a . geom FROM \"sqm\" . tbl a WHERE a . id IS NOT NULL SELECT * INTO \"sqm\" . tbl FROM \"sqm\" . tbl_vm Fun\u00e7\u00f5es -------------------------------------------------------- -- SPLIT Dividir valores de string -- arqueo.sitios -- arqueo | sitios -------------------------------------------------------- SELECT split_part ( fl . featurename :: TEXT , '.' , 1 ) f_table_schema , split_part ( fl . featurename :: TEXT , '.' , 2 ) f_table_name , fl . featurename FROM gdo . fieldlookup fl ; -------------------------------------------------------- -- \"colunas de sistema\" -- localiza\u00e7\u00e3o f\u00edsica da vers\u00e3o da linha da tabela -------------------------------------------------------- select ctid , * from \"Arqueo\" . areas_arqueo_interv -- Exemplo de saida ctid | id | geom | ims | observacoes \"(0,1)\" | 17 | \"\" | \"426\" | \"Rectificar\" \"(0,2)\" | 8 | \"\" | \"398\" | \"\" -------------------------------------------------------- -- DECODING ENCODING -- -------------------------------------------------------- -- Decoding SELECT CONVERT_FROM ( decode ( 'Lzk4XzE5ODA=' , 'base64' ), 'UTF-8' ) FROM \"sqm\" . loteamentos_antigos ; SELECT decode ( pasta , 'base64' ), id FROM \"sqm\" . loteamentos_antigos ORDER BY id ; -- Encoding SELECT encode ( CONVERT_TO ( pasta , 'UTF-8' ), 'base64' ) FROM \"sqm\" . loteamentos_antigos ; SELECT encode ( pasta_nome :: bytea , 'base64' ), id FROM \"sqm\" . loteamentos_antigos ORDER BY id ; -- Exemplos de Saida decode ( 'MTIzAAE=' , 'base64' ) 123 \\ 000 \\ 001 encode ( '123\\\\000\\\\001' , 'base64' ) MTIzAAE = -- Decoding SELECT CONVERT_FROM ( DECODE ( field , 'BASE64' ), 'UTF-8' ) FROM table ; -- Encoding SELECT ENCODE ( CONVERT_TO ( field , 'UTF-8' ), 'base64' ) FROM table ; Formatar datas -------------------------------------------------------- -- Formatar datas -------------------------------------------------------- -- Se for colocado como seguinte valor num campo como default -- actualiza automaticamente a data TO_CHAR ( NOW ():: DATE , 'dd/mm/yyyy' ) SELECT NOW ():: date ; -- Exemplo de saida 2020 - 11 - 12 SELECT TO_CHAR ( NOW ():: DATE , 'dd/mm/yyyy' ); -- Exemplo de saida 12 / 11 / 2020 SELECT TO_CHAR ( NOW ():: DATE , 'yyyy/mm/dd' ); -- Exemplo de saida 2020 / 11 / 12 SELECT TO_CHAR ( NOW ():: DATE , 'Mon dd, yyyy' ); -- Exemplo de saida Nov 12 , 2020 Array -------------------------------------------------------- -- ARRAY -------------------------------------------------------- UPDATE \"Arqueo\" . ue_unidade_tudo -- SET acima_posterior=(ARRAY[5]) -- SET acima_posterior=array_append(acima_posterior, 6::text) SET acima_posterior = acima_posterior || array ( select unnest ( '{6}' :: text []) except select unnest ( acima_posterior )) -- actualiza se n\u00e3o existir -- SET array_append(ARRAY[2,9], 6);='{\"10\", \"5\"}' WHERE id = '10' ; Permiss\u00f5es Tabelas de sistema -------------------------------------------------------- -- Ver esquemas | tabelas | colunas -------------------------------------------------------- -- Tabelas SELECT * FROM pg_catalog . pg_tables WHERE schemaname != 'pg_catalog' AND schemaname != 'information_schema' ; -- Esquemas tabelas SELECT * FROM information_schema . tables t WHERE table_schema != 'pg_catalog' AND table_schema != 'information_schema' ; SELECT t . table_schema , t . table_name , t . table_type FROM information_schema . tables t WHERE table_schema != 'pg_catalog' AND table_schema != 'information_schema' ; -- Colunas das tabelas SELECT * from information_schema . columns --where table_name = 'areas_arqueo_interv' --where column_name like '%geo%' where data_type = 'USER-DEFINED' -- tabelas e colunas SELECT * FROM information_schema . tables t INNER JOIN information_schema . columns c ON c . table_name = t . table_name AND c . table_schema = t . table_schema WHERE t . table_schema not in ( 'information_schema' , 'pg_catalog' ) -- OU - outra forma de fazer WHERE t . table_schema != 'pg_catalog' AND t . table_schema != 'information_schema' Gloss\u00e1rio -------------------------------------------------------- -- Gloss\u00e1rio -------------------------------------------------------- COALESCE -- fun\u00e7\u00e3o aceita um n\u00famero ilimitado de argumentos, -- retorna o primeiro argumento que n\u00e3o \u00e9 nulo unnest () -- fun\u00e7\u00e3o expande um array para uma lista de linhas Postgis Geometrias Informa\u00e7\u00e3o geral -- Ver lista de SRID / EPSG SELECT * FROM public . spatial_ref_sys where auth_srid = 3763 -- Ver tabelas com geometrias SELECT * FROM geometry_columns ; -- Ver o sistema de coordenadas SELECT Find_SRID ( 'rede' , 'eixos' , 'geom' ); Criar / adicionar -- Adicionar uma coluna GEOM ALTER TABLE sqm . tbl ADD COLUMN geom geometry ( MultiPolygon , 3763 ); Alterar -- Atribuir SRID ALTER TABLE \"tbl\" . polignos ALTER COLUMN geom TYPE geometry ( MultiPolygon , 3763 ) USING ST_SetSRID ( geom , 3763 ); -- Alterar 3D para 2D ALTER TABLE \"Arqueo\" . sitios ALTER COLUMN geom TYPE geometry ( MULTIPOINT , 3763 ) USING ST_Force2D ( geom ); -- Alterar MULTIPOINT para POINT ALTER TABLE \"3D\" . ponto ALTER COLUMN geom TYPE geometry ( Point , 3763 ) USING ST_GeometryN ( geom , 1 ) -- Alterar MULTILINESTRING para LINESTRING ALTER TABLE teste . lixo ALTER COLUMN geom TYPE geometry ( LineStringZ , 4326 ) USING ST_GeometryN ( geom , 1 ) -- Tranformar D73 para ERTS89 ALTER TABLE \"PClass\" . sip ALTER COLUMN geom TYPE geometry ( MultiPolygon , 3763 ) USING ST_Transform ( geom , 3763 ); Actualizar -- Actualizar uma geom com buffer UPDATE temp . linha SET geom = ST_Multi ( ST_Buffer ( geom , 100 )); -- UPDATE da geom entre duas tabelas UPDATE \"sqm\" . labels s SET geom = c . geom FROM \"sqm2\" . labels c where s . id = c . id ; UPDATE \"sqm\" . labels AS t SET geom = c . geom FROM ( VALUES -- ('123', 1, '---'), -- (id, umaColuna, outraColuna) ( '1' , 'valor' , 'valor' ) ) AS c ( id , column_c ) WHERE c . id = t . id ; Fun\u00e7\u00f5es -- coord text com transforma\u00e7\u00e3o SELECT ST_AsText ( ST_Transform ( ST_SetSRID ( geom , 274931 ), 3763 )) FROM \"sqm\" . tbl ; -- coord text SELECT id , ST_AsText ( geom ) FROM \"sqm\" . tbl order by id ; -------------------------------------------------------- -- CAOP distritos -- Unir geometrias -------------------------------------------------------- SELECT distrito , ST_Multi ( ST_Union ( geom )) AS geom , CAST ( row_number () OVER ( ORDER BY tabela . distrito ) AS INT ) auto_id FROM \"CAOP\" . cont_aad_caop2018 AS tabela GROUP BY distrito ; -------------------------------------------------------- -- Proximidade entre Geometrias -------------------------------------------------------- -- Exemplo Eixos de Via e N\u00fameros de Policia SELECT v . id , v . designacao , v . geom , p . toponimo FROM \"Rede\" . eixos_via v INNER JOIN \"sqm\" . n_policia p ON ST_DWithin ( v . geom , p . geom , 1 ) -- valor \"1\" = dist\u00e2ncia de atra\u00e7\u00e3o ORDER BY v . id , ST_Distance ( v . geom , p . geom ); -- Igual ao anterior mas com DISTINCT e LIMIT SELECT DISTINCT ON ( v . id ) v . id , v . designacao , v . geom , p . toponimo FROM \"Rede\" . eixos_via v INNER JOIN \"sqm\" . n_policia p ON ST_DWithin ( v . geom , p . geom , 1 ) -- valor \"1\" = dist\u00e2ncia de atra\u00e7\u00e3o ORDER BY v . id , ST_Distance ( v . geom , p . geom ) LIMIT 1 ; Pontos -------------------------------------------------------- -- Ver Valores de geometrias Ponto -------------------------------------------------------- SELECT ST_X ( geom ) as x , ST_Y ( geom ) as y FROM \"Arqueo\" . sitios_arqueo ; SELECT ST_X ( ST_GeometryN ( geom , 1 )) as x , ST_Y ( ST_GeometryN ( geom , 1 )) as y FROM \"Arqueo\" . sitios_arqueo ; -- Multipoint to point -- saida -91197.2710448712 | -29146.2760264456 -- Exemplo de formata\u00e7\u00e3o graus minutos segundos personalizado SELECT ( ST_AsLatLonText ( geom , 'D\u00b0M''S.SSSS\"C' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; SELECT ( ST_AsLatLonText ( ST_GeometryN ( geom , 1 ), 'D\u00b0M''S.SSSS\"C' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; -- Multipoint to point -- saida: 8\u00b012'57.8476\"N 123\u00b050'26.4165\"E -- Exemplo de formata\u00e7\u00e3o graus minutos segundos SELECT ( ST_AsLatLonText ( geom )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; SELECT ( ST_AsLatLonText ( ST_GeometryN ( geom , 1 ))) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; -- Multipoint to point -- saida: 8\u00b012'57.848\"N 123\u00b050'26.417\"E SELECT ( ST_AsLatLonText ( geom , 'D\u00b0M''S.SSS\"' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; SELECT ( ST_AsLatLonText ( ST_GeometryN ( geom , 1 ), 'D\u00b0M''S.SSS\"' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; -- Multipoint to point -- saida: 8\u00b012'57.848\" 123\u00b050'26.417\" SELECT ( ST_AsLatLonText ( geom , 'D.DDDD graus C' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; SELECT ( ST_AsLatLonText ( ST_GeometryN ( geom , 1 ), 'D.DDDD graus C' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; -- Multipoint to point -- saida: 8.2161 graus N 123.8407 graus E SELECT ( ST_AsLatLonText ( geom , 'D.DDDDDDD' )) as Longitude_latitude FROM \"Arqueo\" . naufragios ; SELECT ( ST_AsLatLonText ( ST_GeometryN ( geom , 1 ), 'D.DDDDDDD' )) as Longitude_latitude FROM \"Arqueo\" . naufragios ; -- Multipoint to point -- saida: 8.2160688 123.8406713 Linhas -------------------------------------------------------- -- Extrair valores calculados das linhas (inclisiv\u00e9 com valores z) -------------------------------------------------------- SELECT -- Comprimento Metro ST_Length ( ST_Transform ( geom , 3763 )):: numeric AS compr_m , -- Comprimento Metro arredondado ROUND (( ST_Length ( ST_Transform ( geom , 3763 ))):: numeric , 3 ) AS compr_mt , -- Comprimento Quilometro ( ST_Length ( ST_Transform ( geom , 3763 )) / 1000 ):: numeric AS compr_km , -- Comprimento Quilometro arredondado ROUND (( ST_Length ( ST_Transform ( geom , 3763 )) / 1000 ):: numeric , 6 ) AS compr_kms , -- Exten\u00e7\u00e3o da linha (ret\u00e2ngulo) xmax ymax xmin ymax ST_XMax ( geom ):: numeric AS xmax , ST_YMax ( geom ):: numeric AS ymax , ST_XMin ( geom ):: numeric AS xmin , ST_YMin ( geom ):: numeric AS ymin , -- Altura Maxima ROUND ( ST_ZMax ( geom ):: numeric , 2 ) AS alt_max , -- Altura Minima ROUND ( ST_ZMin ( geom ):: numeric , 2 ) AS alt_min , -- Coordenadas do Ponto Inicial ( ST_AsLatLonText ( ST_StartPoint ( ST_LineMerge ( geom ):: geometry ), 'D\u00b0M''S.SSSS\"C' )) as ponto_inicio , -- Coordenadas do Ponto Final ( ST_AsLatLonText ( ST_EndPoint ( ST_LineMerge ( geom ):: geometry ), 'D\u00b0M''S.SSSS\"C' )) as ponto_fim , -- Ponto Inicial -- -- Ponto 3D ST_StartPoint ( ST_LineMerge ( geom )):: geometry ( PointZ , 4326 ) as geompti_3d , --n\u00e3o funciona com geometrias multiplas -- Ponto 2D ST_StartPoint ( ST_LineMerge ( ST_Force2D ( geom ))):: geometry ( Point , 4326 ) as geompti , --n\u00e3o funciona com geometrias multiplas -- Ponto Final -- -- Ponto 3D ST_EndPoint ( ST_LineMerge ( geom )):: geometry ( PointZ , 4326 ) as geomptf_3d , --n\u00e3o funciona com geometrias multiplas -- Ponto 2D ST_EndPoint ( ST_LineMerge ( ST_Force2D ( geom ))):: geometry ( Point , 4326 ) as geomptf , --n\u00e3o funciona com geometrias multiplas -- Numero de Geometrias ST_NumGeometries ( geom ) AS n_geom , -- Numero de Vertices ST_NPoints ( geom ) AS n_vertices FROM perc_pedestres . lixo Seleccionar valores Z raster -- Seleccionar valores Z com Altimetria de Raster SELECT --s.altitude, s . geom AS geom , -- o ST_GeometryN \u00e9 para converter os multipoint em point ST_Value ( r . rast , 1 , ST_GeometryN ( s . geom , 1 )) AS z_auto_srtm_pt_25m FROM raster . srtm_pt_25m r , temp . ponto s WHERE ST_Intersects ( r . rast , s . geom ); -- Actualizar valores Z com Altimetria de Raster UPDATE bbr . carta_arqueo s SET z_auto_srtm_pt_25m = ST_Value ( r . rast , 1 , s . geom ) FROM raster . srtm_pt_25m r WHERE ST_Intersects ( r . rast , s . geom ); Converter -- coverter linhas em poligonos SELECT ST_AsText ( ST_Polygonize ( geom )) as geomgc , -- transforma a geom em GEOMETRYCOLLECTION ST_AsText ( ST_Node ( ST_AsText ( geom ))) as geom2 , ST_AsText (( ST_Dump ( ST_Polygonize ( geom ))). geom ) as geompl -- transforma a geom em POLYGON from arqueo . ue where id = 12 or id = 15 GROUP BY geom Apagar -- Apagar uma Coluna GEOM ALTER TABLE temp . linha DROP COLUMN geom ; Transforma\u00e7\u00e3o de SRIDs Grelhas NTv2 Transformar dados com o postgis -------------------------------------------------------- -- PROCEDIMENTO -------------------------------------------------------- ** 1 ** -- Colocar os ficheiros das grelhas (.gsb) na pasta utilizada pelo -- PROJ.4, cuja localiza\u00e7\u00e3o vai depender do Sistema Operativo utilizado: -- LINUX -- os ficheiros das grelhas colocam-se na pasta * / usr / share / proj / * -- confirmar -- reiniciar o postgres sudo service postgresql restart -- WINDOWS -- para o QGIS -- instalador OSGeo4W, * .. \\ OSGeo4W \\ share \\ proj -- ou intalador normal C : \\ Program Files \\ QGIS 3 . 6 \\ share \\ proj -- Para o Postgres/Postgis * C : \\ Program Files \\ PostgreSQL \\ 11 \\ share \\ contrib \\ postgis - 2 . 5 \\ proj -- reiniciar o postgres (Alt+R = services.msc) -- Uma outra alternativa \u00e9 verificar a path da vari\u00e1vel de ambiente PROJ_LIB -- e colocar os ficheiros nessa pasta. -------------------------------------------------------- ** 2 ** -- consultar os dados na tabela `spatial_ref_sys` SELECT * FROM spatial_ref_sys WHERE srid = 27492 OR srid = 27493 -- dados originais - dever\u00e3o ser os seguintes -- 27492 + proj = tmerc + lat_0 = 39 . 66666666666666 + lon_0 =- 8 . 131906111111112 + k = 1 + x_0 = 180 . 598 + y_0 =- 86 . 98999999999999 + ellps = intl + towgs84 =- 223 . 237 , 110 . 193 , 36 . 649 , 0 , 0 , 0 , 0 + units = m + no_defs -- 27493 + proj = tmerc + lat_0 = 39 . 66666666666666 + lon_0 =- 8 . 131906111111112 + k = 1 + x_0 = 180 . 598 + y_0 =- 86 . 98999999999999 + ellps = intl + towgs84 =- 223 . 237 , 110 . 193 , 36 . 649 , 0 , 0 , 0 , 0 + units = m + no_defs -------------------------------------------------------- ** 3 ** -- Actualiza\u00e7\u00e3o/sustitui\u00e7\u00e3o dos valores existentes temporariamente -- grelhas NTv2 - valores para o campo `srtext` + proj = tmerc + lat_0 = 39 . 66666666666666 + lon_0 =- 8 . 131906111111112 + k = 1 + x_0 = 180 . 598 + y_0 =- 86 . 98999999999999 + ellps = intl + nadgrids = D73_ETRS89_geo . gsb + wktext + units = m + no_defs -- actualizar para grelhas NTv2 executar: UPDATE spatial_ref_sys SET proj4text = '+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=180.598 +y_0=-86.98999999999999 +ellps=intl +nadgrids=D73_ETRS89_geo.gsb +wktext +units=m +no_defs' WHERE spatial_ref_sys . srid = 27493 ; -------------------------------------------------------- ** 4 ** ver 4 . 1 -- Actualizar as tabelas para `ETRS89` -- SQL para alterar sistema de coordenadas: -- Definir esquema.tabela e o tipo de geometria). ALTER TABLE * esquema * . * tabela * ALTER COLUMN geom TYPE geometry ( * Point * , 3763 ) USING ST_Transform ( geom , 3763 ); -- Testado ALTER TABLE teste . p_postgis ALTER COLUMN geom TYPE geometry ( MultiPolygon , 3763 ) USING ST_Transform ( geom , 3763 ); -------------------------------------------------------- ** 5 ** -- Repor os valores originais: UPDATE spatial_ref_sys SET proj4text = '+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=180.598 +y_0=-86.98999999999999 +ellps=intl +towgs84=-223.237,110.193,36.649,0,0,0,0 +units=m +no_defs' WHERE spatial_ref_sys . srid = 27493 ; -------------------------------------------------------- ** 4 . 1 ** -- OU criar uma nova entrada - outra forma de fazer -- Insert `274931` srid criado para teste INSERT INTO public . spatial_ref_sys ( srid , auth_name , auth_srid , srtext , proj4text ) VALUES ( 274931 , 'EPSG' , 274931 , 'PROJCS[\"7 - Datum73_Hayford_Gauss_Grelhas_DGT_27493\",GEOGCS[\"Datum 73\",DATUM[\"Datum_73\",SPHEROID[\"International 1924\",6378388,297,AUTHORITY[\"EPSG\",\"7022\"]],TOWGS84[-223.237,110.193,36.649,0,0,0,0],AUTHORITY[\"EPSG\",\"6274\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4274\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",39.66666666666666],PARAMETER[\"central_meridian\",-8.131906111111112],PARAMETER[\"scale_factor\",1],PARAMETER[\"false_easting\",180.598],PARAMETER[\"false_northing\",-86.99],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"X\",EAST],AXIS[\"Y\",NORTH],AUTHORITY[\"EPSG\",\"27493\"]]' , '+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=180.598 +y_0=-86.99 +ellps=intl +nadgrids=D73_ETRS89_geo.gsb +wktext +units=m +no_defs' ); -- consultar entrada criada SELECT * FROM public . spatial_ref_sys WHERE auth_srid = 274931 ; Transforma\u00e7\u00e3o directa -- Datum 73 -> Datum LX SELECT ST_AsText ( ST_Transform ( ST_SetSRID ( ST_Makepoint ( - 28999 . 924 , - 135387 . 053 ), 27493 ), 20791 )); -- Saida POINT ( - 29000 . 0299819616 - 135387 . 25142969 ) -- Datum 73 -> PT-TM06 SELECT ST_AsText ( ST_Transform ( ST_SetSRID ( ST_Makepoint ( - 28999 . 924 , - 135387 . 053 ), 27493 ), 3763 )); -- Saida POINT ( - 28997 . 8232107334 - 135386 . 517692238 ) SELECT ST_AsEWKT ( st_setsrid ( ST_Transform ( ST_Transform ( ST_SetSRID ( ST_Point ( - 28999 . 924 , - 135387 . 053 ), 27493 ), 3763 ), 3763 ), 3763 )); -- Saida SRID = 3763 ; POINT ( - 28997 . 384862033 - 135386 . 750939952 ) SRID personalizado -- inserir o Sistema de Coordenadas -- 15 - Lisbon 1890 (Lisbon) / Portugal ellps=intl_SP -- para actualizar o \"EPSG 5018\" executar: -- N\u00e3o testado UPDATE spatial_ref_sys SET proj4text = '+proj=tmerc +lat_0=38.71369722222222 +lon_0=-9.133161111111111 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs' WHERE spatial_ref_sys . srid = 5018 ; UPDATE spatial_ref_sys SET srtext = 'PROJCS[\"unnamed\",GEOGCS[\"WGS 84\",DATUM[\"unknown\",SPHEROID[\"WGS84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",38.71369722222222],PARAMETER[\"central_meridian\",-9.133161111111111],PARAMETER[\"scale_factor\",1],PARAMETER[\"false_easting\",0],PARAMETER[\"false_northing\",0],UNIT[\"Meter\",1]]' WHERE spatial_ref_sys . srid = 5018 ; -- N\u00e3o testado UPDATE spatial_ref_sys SET proj4text = '+proj=tmerc +lat_0=38.71369722222222 +lon_0=-9.133161111111111 +k=1 +x_0=0 +y_0=0 +ellps=bessel +units=m +no_defs' WHERE spatial_ref_sys . srid = 5018 ; UPDATE spatial_ref_sys SET srtext = 'PROJCRS[\"Lisbon 1890 (Lisbon) / Portugal Bonne\",BASEGEODCRS[\"Lisbon 1890 (Lisbon)\",DATUM[\"Lisbon 1890 (Lisbon)\",ELLIPSOID[\"Bessel 1841\",6377397.155,299.1528128,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Lisbon\",-9.13190611111111,ANGLEUNIT[\"degree\",0.0174532925199433]]],CONVERSION[\"Portugal Bonne\",METHOD[\"Bonne (South Orientated)\",ID[\"EPSG\",9828]],PARAMETER[\"Latitude of natural origin\",39.6666666666667,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",1,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"False easting\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"southing (P)\",south,ORDER[1],LENGTHUNIT[\"metre\",1]],AXIS[\"westing (M)\",west,ORDER[2],LENGTHUNIT[\"metre\",1]],AREA[\"Portugal - mainland - onshore\"],BBOX[36.95,-9.56,42.16,-6.19],ID[\"EPSG\",2963]]' WHERE spatial_ref_sys . srid = 5018 ; -- dados originais -- 5018 UPDATE spatial_ref_sys SET proj4text = '+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=0 +y_0=0 +ellps=intl +towgs84=-304.046,-60.576,103.64,0,0,0,0 +units=m +no_defs ' WHERE spatial_ref_sys . srid = 5018 ; UPDATE spatial_ref_sys SET srtext = 'PROJCS[\"Lisbon / Portuguese Grid New\",GEOGCS[\"Lisbon\",DATUM[\"Lisbon_1937\",SPHEROID[\"International 1924\",6378388,297,AUTHORITY[\"EPSG\",\"7022\"]],TOWGS84[-304.046,-60.576,103.64,0,0,0,0],AUTHORITY[\"EPSG\",\"6207\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4207\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",39.66666666666666],PARAMETER[\"central_meridian\",-8.131906111111112],PARAMETER[\"scale_factor\",1],PARAMETER[\"false_easting\",0],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"X\",EAST],AXIS[\"Y\",NORTH],AUTHORITY[\"EPSG\",\"5018\"]]' WHERE spatial_ref_sys . srid = 5018 ; Raster Carregar raster para a base de dados Chapter 5. Raster Data Management, Queries, and Applications REM linhas de comandos a executar no local da instala\u00e7\u00e3o do postgres REM COM PIR\u00c2MIDES cd C:\\Program Files\\PostgreSQL\\11\\bin\\ raster2pgsql.exe -s 3763 -I -C -M -l 2,4,8,16,32,64,128,256 C:\\RASTER\\338_2_1942.tif -F -t 256x256 raster.338_2_1942_2 | psql -d arqvector -U postgres -p 5432 REM EXEMPLOS cd C:\\Program Files\\PostgreSQL\\11\\bin raster2pgsql.exe -c -C -I -M -Y -t 128x128 -s 3763 C:\\DEM.tif raster.dem10k > C:\\DEN.tif.sql raster2pgsql.exe -c -C -I -M -Y -t 128x128 -s 3763 C:\\DEM.tif raster.dem10k | psql -U postgres -d arqvector -h localhost -p5432 REM SRTM_PT_25m.tif cd C:\\Program Files\\PostgreSQL\\11\\bin raster2pgsql.exe -c -C -I -M -F -Y -t 100x100 -s 3763 C:\\RASTER\\SRTM_PT_25m.tif raster.srtm_pt_25m | psql -U postgres -d arqvector -h localhost -p5432 REM overview -l 2,4,8,16,32,64,128,256 REM LINUX raster2pgsql -s 3763 -I -C -M ORTOS_2015.tif -F -t 256x256 raster.ortos_2015 | psql -d sig-obidos -h localhost -U postgres -p 5432 Tutoriais GitHub - lcalisto/workshop-postgis-raster: Workshop to explain and exemplify the usage of PostGIS raster.","title":"POSTGRES - POSTGIS"},{"location":"postgres/#postgres-postgis","text":"POSTGRES - POSTGIS Postgres Chaves INSERT UPDATE DELETE insert update delete Alterar Ordenar de Colunas Fun\u00e7\u00f5es Formatar datas Array Permiss\u00f5es Tabelas de sistema Gloss\u00e1rio Postgis Geometrias Informa\u00e7\u00e3o geral Criar / adicionar Alterar Actualizar Fun\u00e7\u00f5es Pontos Linhas Seleccionar valores Z raster Converter Apagar Transforma\u00e7\u00e3o de SRIDs Grelhas NTv2 Transforma\u00e7\u00e3o directa Raster Carregar raster para a base de dados Tutoriais","title":"POSTGRES - POSTGIS"},{"location":"postgres/#postgres","text":"","title":"Postgres"},{"location":"postgres/#chaves","text":"-------------------------------------------------------- -- Chaves -------------------------------------------------------- -- Adicionar chave prim\u00e1ria ALTER TABLE \"Rede\" . sinalizacao ADD CONSTRAINT imagens_infra_estradas_pkey PRIMARY KEY ( id ) -- Adicionar chave estrangeira ALTER TABLE \"Rede\" . sinalizacao DROP CONSTRAINT fk_sina_tipo , ADD CONSTRAINT fk_sina_tipo FOREIGN KEY ( tipo ) REFERENCES \"Rede\" . sina_tipo ( tipo ) -- origem ON UPDATE CASCADE ON DELETE SET NULL -- este colaca nulo DEFERRABLE INITIALLY DEFERRED ; -- Outras op\u00e7\u00f5es ON DELETE SET NULL -- este colaca nulo ON DELETE CASCADE -- este apaga --Adicionar coluna para valor \u00fanico ALTER TABLE \"Rede\" . sinalizacao ADD CONSTRAINT const_sinalizacao_cod UNIQUE ( cod )","title":"Chaves"},{"location":"postgres/#insert-update-delete","text":"","title":"INSERT UPDATE DELETE"},{"location":"postgres/#insert","text":"-- Inserir diferen\u00e7a apenas nos dados que diferem -- entre duas tabelas \"iguais\" ou vista INSERT INTO eq . tabeladestino SELECT * FROM (( SELECT * FROM eq . tabelaorigem o ) -- ou vista EXCEPT ( SELECT * FROM eq . tabeladestino d )) AS s","title":"insert"},{"location":"postgres/#update","text":"-------------------------------------------------------- -- UPDATE REPLACE -- SET coluna = REPLACE(coluna,'texto velho','texto novo') -------------------------------------------------------- UPDATE \"Rede\" . sinalizacao SET dgv = REPLACE ( dgv , 'S:' , 'S:' ) -------------------------------------------------------- -- UPDATE com a \"soma\" de sinais associados ao suporte -- preenche o \"n_sinais_associados\" na tabela \"suporte\" -------------------------------------------------------- UPDATE \"RedeV\" . suporte u --3 SET n_sinais_associados = soma FROM -- inicio da consulta ( SELECT s . cod , COUNT ( s . cod ):: int as soma FROM \"Rede\" . suporte s LEFT JOIN \"Rede\" . sinalizacao_municipal t ON ( s . cod = t . cod_suporte ) WHERE ( s . cod = t . cod_suporte ) -- limitar registos na consulta GROUP BY s . cod ) consulta WHERE u . cod = consulta . cod ; -- seleccionar dados correctos -- Fim da consulta","title":"update"},{"location":"postgres/#delete","text":"-------------------------------------------------------- -- Apagar diferen\u00e7a entre \"gdo.gfieldmapping\" e \"gdo.vm_gfieldmapping\" -------------------------------------------------------- DELETE FROM gdo . gfieldmapping WHERE concat (( gfieldmapping . f_table_schema :: text || '.' :: text ) || gfieldmapping . f_table_name :: text ) = ( SELECT concat (( s . f_table_schema :: text || '.' :: text ) || s . f_table_name :: text ) as s FROM (( SELECT * from gdo . gfieldmapping vm ) EXCEPT ( SELECT * from gdo . vm_gfieldmapping g )) as s ) -- OU -- WHERE concat((gfieldmapping.f_table_schema::text || '.'::text) || gfieldmapping.f_table_name::text)='sqm.toponimia_igp25k'","title":"delete"},{"location":"postgres/#alterar","text":"-------------------------------------------------------- -- ALTERAR TIPO -------------------------------------------------------- ALTER TABLE \"Rede\" . sinalizacao ALTER COLUMN id TYPE integer USING id :: integer -------------------------------------------------------- -- Mudar Tipo de dados de uma coluna -------------------------------------------------------- ALTER TABLE \"PM\" . \"FGC\" ALTER COLUMN desc_fgc TYPE integer USING desc_fgc :: integer ; ALTER TABLE \"3D\" . pontos_unido ALTER COLUMN coluna TYPE text USING coluna :: text ; ALTER TABLE \"3D\" . pontos_unido ALTER COLUMN text TYPE numeric ( 10 , 2 ) USING text :: numeric ( 10 , 2 ); ALTER TABLE \"sqm\" . labels ALTER COLUMN \"name\" TYPE text USING \"name\" :: text ;","title":"Alterar"},{"location":"postgres/#ordenar-de-colunas","text":"-- criar vista materializada com a ordem pretendida CREATE VIEW \"sqm\" . tbl_vm AS SELECT a . id , a . numero , a . tipo , a . ano , a . geom FROM \"sqm\" . tbl a WHERE a . id IS NOT NULL SELECT * INTO \"sqm\" . tbl FROM \"sqm\" . tbl_vm","title":"Ordenar de Colunas"},{"location":"postgres/#funcoes","text":"-------------------------------------------------------- -- SPLIT Dividir valores de string -- arqueo.sitios -- arqueo | sitios -------------------------------------------------------- SELECT split_part ( fl . featurename :: TEXT , '.' , 1 ) f_table_schema , split_part ( fl . featurename :: TEXT , '.' , 2 ) f_table_name , fl . featurename FROM gdo . fieldlookup fl ; -------------------------------------------------------- -- \"colunas de sistema\" -- localiza\u00e7\u00e3o f\u00edsica da vers\u00e3o da linha da tabela -------------------------------------------------------- select ctid , * from \"Arqueo\" . areas_arqueo_interv -- Exemplo de saida ctid | id | geom | ims | observacoes \"(0,1)\" | 17 | \"\" | \"426\" | \"Rectificar\" \"(0,2)\" | 8 | \"\" | \"398\" | \"\" -------------------------------------------------------- -- DECODING ENCODING -- -------------------------------------------------------- -- Decoding SELECT CONVERT_FROM ( decode ( 'Lzk4XzE5ODA=' , 'base64' ), 'UTF-8' ) FROM \"sqm\" . loteamentos_antigos ; SELECT decode ( pasta , 'base64' ), id FROM \"sqm\" . loteamentos_antigos ORDER BY id ; -- Encoding SELECT encode ( CONVERT_TO ( pasta , 'UTF-8' ), 'base64' ) FROM \"sqm\" . loteamentos_antigos ; SELECT encode ( pasta_nome :: bytea , 'base64' ), id FROM \"sqm\" . loteamentos_antigos ORDER BY id ; -- Exemplos de Saida decode ( 'MTIzAAE=' , 'base64' ) 123 \\ 000 \\ 001 encode ( '123\\\\000\\\\001' , 'base64' ) MTIzAAE = -- Decoding SELECT CONVERT_FROM ( DECODE ( field , 'BASE64' ), 'UTF-8' ) FROM table ; -- Encoding SELECT ENCODE ( CONVERT_TO ( field , 'UTF-8' ), 'base64' ) FROM table ;","title":"Fun\u00e7\u00f5es"},{"location":"postgres/#formatar-datas","text":"-------------------------------------------------------- -- Formatar datas -------------------------------------------------------- -- Se for colocado como seguinte valor num campo como default -- actualiza automaticamente a data TO_CHAR ( NOW ():: DATE , 'dd/mm/yyyy' ) SELECT NOW ():: date ; -- Exemplo de saida 2020 - 11 - 12 SELECT TO_CHAR ( NOW ():: DATE , 'dd/mm/yyyy' ); -- Exemplo de saida 12 / 11 / 2020 SELECT TO_CHAR ( NOW ():: DATE , 'yyyy/mm/dd' ); -- Exemplo de saida 2020 / 11 / 12 SELECT TO_CHAR ( NOW ():: DATE , 'Mon dd, yyyy' ); -- Exemplo de saida Nov 12 , 2020","title":"Formatar datas"},{"location":"postgres/#array","text":"-------------------------------------------------------- -- ARRAY -------------------------------------------------------- UPDATE \"Arqueo\" . ue_unidade_tudo -- SET acima_posterior=(ARRAY[5]) -- SET acima_posterior=array_append(acima_posterior, 6::text) SET acima_posterior = acima_posterior || array ( select unnest ( '{6}' :: text []) except select unnest ( acima_posterior )) -- actualiza se n\u00e3o existir -- SET array_append(ARRAY[2,9], 6);='{\"10\", \"5\"}' WHERE id = '10' ;","title":"Array"},{"location":"postgres/#permissoes","text":"","title":"Permiss\u00f5es"},{"location":"postgres/#tabelas-de-sistema","text":"-------------------------------------------------------- -- Ver esquemas | tabelas | colunas -------------------------------------------------------- -- Tabelas SELECT * FROM pg_catalog . pg_tables WHERE schemaname != 'pg_catalog' AND schemaname != 'information_schema' ; -- Esquemas tabelas SELECT * FROM information_schema . tables t WHERE table_schema != 'pg_catalog' AND table_schema != 'information_schema' ; SELECT t . table_schema , t . table_name , t . table_type FROM information_schema . tables t WHERE table_schema != 'pg_catalog' AND table_schema != 'information_schema' ; -- Colunas das tabelas SELECT * from information_schema . columns --where table_name = 'areas_arqueo_interv' --where column_name like '%geo%' where data_type = 'USER-DEFINED' -- tabelas e colunas SELECT * FROM information_schema . tables t INNER JOIN information_schema . columns c ON c . table_name = t . table_name AND c . table_schema = t . table_schema WHERE t . table_schema not in ( 'information_schema' , 'pg_catalog' ) -- OU - outra forma de fazer WHERE t . table_schema != 'pg_catalog' AND t . table_schema != 'information_schema'","title":"Tabelas de sistema"},{"location":"postgres/#glossario","text":"-------------------------------------------------------- -- Gloss\u00e1rio -------------------------------------------------------- COALESCE -- fun\u00e7\u00e3o aceita um n\u00famero ilimitado de argumentos, -- retorna o primeiro argumento que n\u00e3o \u00e9 nulo unnest () -- fun\u00e7\u00e3o expande um array para uma lista de linhas","title":"Gloss\u00e1rio"},{"location":"postgres/#postgis","text":"","title":"Postgis"},{"location":"postgres/#geometrias","text":"","title":"Geometrias"},{"location":"postgres/#informacao-geral","text":"-- Ver lista de SRID / EPSG SELECT * FROM public . spatial_ref_sys where auth_srid = 3763 -- Ver tabelas com geometrias SELECT * FROM geometry_columns ; -- Ver o sistema de coordenadas SELECT Find_SRID ( 'rede' , 'eixos' , 'geom' );","title":"Informa\u00e7\u00e3o geral"},{"location":"postgres/#criar-adicionar","text":"-- Adicionar uma coluna GEOM ALTER TABLE sqm . tbl ADD COLUMN geom geometry ( MultiPolygon , 3763 );","title":"Criar / adicionar"},{"location":"postgres/#alterar_1","text":"-- Atribuir SRID ALTER TABLE \"tbl\" . polignos ALTER COLUMN geom TYPE geometry ( MultiPolygon , 3763 ) USING ST_SetSRID ( geom , 3763 ); -- Alterar 3D para 2D ALTER TABLE \"Arqueo\" . sitios ALTER COLUMN geom TYPE geometry ( MULTIPOINT , 3763 ) USING ST_Force2D ( geom ); -- Alterar MULTIPOINT para POINT ALTER TABLE \"3D\" . ponto ALTER COLUMN geom TYPE geometry ( Point , 3763 ) USING ST_GeometryN ( geom , 1 ) -- Alterar MULTILINESTRING para LINESTRING ALTER TABLE teste . lixo ALTER COLUMN geom TYPE geometry ( LineStringZ , 4326 ) USING ST_GeometryN ( geom , 1 ) -- Tranformar D73 para ERTS89 ALTER TABLE \"PClass\" . sip ALTER COLUMN geom TYPE geometry ( MultiPolygon , 3763 ) USING ST_Transform ( geom , 3763 );","title":"Alterar"},{"location":"postgres/#actualizar","text":"-- Actualizar uma geom com buffer UPDATE temp . linha SET geom = ST_Multi ( ST_Buffer ( geom , 100 )); -- UPDATE da geom entre duas tabelas UPDATE \"sqm\" . labels s SET geom = c . geom FROM \"sqm2\" . labels c where s . id = c . id ; UPDATE \"sqm\" . labels AS t SET geom = c . geom FROM ( VALUES -- ('123', 1, '---'), -- (id, umaColuna, outraColuna) ( '1' , 'valor' , 'valor' ) ) AS c ( id , column_c ) WHERE c . id = t . id ;","title":"Actualizar"},{"location":"postgres/#funcoes_1","text":"-- coord text com transforma\u00e7\u00e3o SELECT ST_AsText ( ST_Transform ( ST_SetSRID ( geom , 274931 ), 3763 )) FROM \"sqm\" . tbl ; -- coord text SELECT id , ST_AsText ( geom ) FROM \"sqm\" . tbl order by id ; -------------------------------------------------------- -- CAOP distritos -- Unir geometrias -------------------------------------------------------- SELECT distrito , ST_Multi ( ST_Union ( geom )) AS geom , CAST ( row_number () OVER ( ORDER BY tabela . distrito ) AS INT ) auto_id FROM \"CAOP\" . cont_aad_caop2018 AS tabela GROUP BY distrito ; -------------------------------------------------------- -- Proximidade entre Geometrias -------------------------------------------------------- -- Exemplo Eixos de Via e N\u00fameros de Policia SELECT v . id , v . designacao , v . geom , p . toponimo FROM \"Rede\" . eixos_via v INNER JOIN \"sqm\" . n_policia p ON ST_DWithin ( v . geom , p . geom , 1 ) -- valor \"1\" = dist\u00e2ncia de atra\u00e7\u00e3o ORDER BY v . id , ST_Distance ( v . geom , p . geom ); -- Igual ao anterior mas com DISTINCT e LIMIT SELECT DISTINCT ON ( v . id ) v . id , v . designacao , v . geom , p . toponimo FROM \"Rede\" . eixos_via v INNER JOIN \"sqm\" . n_policia p ON ST_DWithin ( v . geom , p . geom , 1 ) -- valor \"1\" = dist\u00e2ncia de atra\u00e7\u00e3o ORDER BY v . id , ST_Distance ( v . geom , p . geom ) LIMIT 1 ;","title":"Fun\u00e7\u00f5es"},{"location":"postgres/#pontos","text":"-------------------------------------------------------- -- Ver Valores de geometrias Ponto -------------------------------------------------------- SELECT ST_X ( geom ) as x , ST_Y ( geom ) as y FROM \"Arqueo\" . sitios_arqueo ; SELECT ST_X ( ST_GeometryN ( geom , 1 )) as x , ST_Y ( ST_GeometryN ( geom , 1 )) as y FROM \"Arqueo\" . sitios_arqueo ; -- Multipoint to point -- saida -91197.2710448712 | -29146.2760264456 -- Exemplo de formata\u00e7\u00e3o graus minutos segundos personalizado SELECT ( ST_AsLatLonText ( geom , 'D\u00b0M''S.SSSS\"C' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; SELECT ( ST_AsLatLonText ( ST_GeometryN ( geom , 1 ), 'D\u00b0M''S.SSSS\"C' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; -- Multipoint to point -- saida: 8\u00b012'57.8476\"N 123\u00b050'26.4165\"E -- Exemplo de formata\u00e7\u00e3o graus minutos segundos SELECT ( ST_AsLatLonText ( geom )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; SELECT ( ST_AsLatLonText ( ST_GeometryN ( geom , 1 ))) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; -- Multipoint to point -- saida: 8\u00b012'57.848\"N 123\u00b050'26.417\"E SELECT ( ST_AsLatLonText ( geom , 'D\u00b0M''S.SSS\"' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; SELECT ( ST_AsLatLonText ( ST_GeometryN ( geom , 1 ), 'D\u00b0M''S.SSS\"' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; -- Multipoint to point -- saida: 8\u00b012'57.848\" 123\u00b050'26.417\" SELECT ( ST_AsLatLonText ( geom , 'D.DDDD graus C' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; SELECT ( ST_AsLatLonText ( ST_GeometryN ( geom , 1 ), 'D.DDDD graus C' )) as Longitude_latitude FROM \"Arqueo\" . sitios_arqueo ; -- Multipoint to point -- saida: 8.2161 graus N 123.8407 graus E SELECT ( ST_AsLatLonText ( geom , 'D.DDDDDDD' )) as Longitude_latitude FROM \"Arqueo\" . naufragios ; SELECT ( ST_AsLatLonText ( ST_GeometryN ( geom , 1 ), 'D.DDDDDDD' )) as Longitude_latitude FROM \"Arqueo\" . naufragios ; -- Multipoint to point -- saida: 8.2160688 123.8406713","title":"Pontos"},{"location":"postgres/#linhas","text":"-------------------------------------------------------- -- Extrair valores calculados das linhas (inclisiv\u00e9 com valores z) -------------------------------------------------------- SELECT -- Comprimento Metro ST_Length ( ST_Transform ( geom , 3763 )):: numeric AS compr_m , -- Comprimento Metro arredondado ROUND (( ST_Length ( ST_Transform ( geom , 3763 ))):: numeric , 3 ) AS compr_mt , -- Comprimento Quilometro ( ST_Length ( ST_Transform ( geom , 3763 )) / 1000 ):: numeric AS compr_km , -- Comprimento Quilometro arredondado ROUND (( ST_Length ( ST_Transform ( geom , 3763 )) / 1000 ):: numeric , 6 ) AS compr_kms , -- Exten\u00e7\u00e3o da linha (ret\u00e2ngulo) xmax ymax xmin ymax ST_XMax ( geom ):: numeric AS xmax , ST_YMax ( geom ):: numeric AS ymax , ST_XMin ( geom ):: numeric AS xmin , ST_YMin ( geom ):: numeric AS ymin , -- Altura Maxima ROUND ( ST_ZMax ( geom ):: numeric , 2 ) AS alt_max , -- Altura Minima ROUND ( ST_ZMin ( geom ):: numeric , 2 ) AS alt_min , -- Coordenadas do Ponto Inicial ( ST_AsLatLonText ( ST_StartPoint ( ST_LineMerge ( geom ):: geometry ), 'D\u00b0M''S.SSSS\"C' )) as ponto_inicio , -- Coordenadas do Ponto Final ( ST_AsLatLonText ( ST_EndPoint ( ST_LineMerge ( geom ):: geometry ), 'D\u00b0M''S.SSSS\"C' )) as ponto_fim , -- Ponto Inicial -- -- Ponto 3D ST_StartPoint ( ST_LineMerge ( geom )):: geometry ( PointZ , 4326 ) as geompti_3d , --n\u00e3o funciona com geometrias multiplas -- Ponto 2D ST_StartPoint ( ST_LineMerge ( ST_Force2D ( geom ))):: geometry ( Point , 4326 ) as geompti , --n\u00e3o funciona com geometrias multiplas -- Ponto Final -- -- Ponto 3D ST_EndPoint ( ST_LineMerge ( geom )):: geometry ( PointZ , 4326 ) as geomptf_3d , --n\u00e3o funciona com geometrias multiplas -- Ponto 2D ST_EndPoint ( ST_LineMerge ( ST_Force2D ( geom ))):: geometry ( Point , 4326 ) as geomptf , --n\u00e3o funciona com geometrias multiplas -- Numero de Geometrias ST_NumGeometries ( geom ) AS n_geom , -- Numero de Vertices ST_NPoints ( geom ) AS n_vertices FROM perc_pedestres . lixo","title":"Linhas"},{"location":"postgres/#seleccionar-valores-z-raster","text":"-- Seleccionar valores Z com Altimetria de Raster SELECT --s.altitude, s . geom AS geom , -- o ST_GeometryN \u00e9 para converter os multipoint em point ST_Value ( r . rast , 1 , ST_GeometryN ( s . geom , 1 )) AS z_auto_srtm_pt_25m FROM raster . srtm_pt_25m r , temp . ponto s WHERE ST_Intersects ( r . rast , s . geom ); -- Actualizar valores Z com Altimetria de Raster UPDATE bbr . carta_arqueo s SET z_auto_srtm_pt_25m = ST_Value ( r . rast , 1 , s . geom ) FROM raster . srtm_pt_25m r WHERE ST_Intersects ( r . rast , s . geom );","title":"Seleccionar valores Z raster"},{"location":"postgres/#converter","text":"-- coverter linhas em poligonos SELECT ST_AsText ( ST_Polygonize ( geom )) as geomgc , -- transforma a geom em GEOMETRYCOLLECTION ST_AsText ( ST_Node ( ST_AsText ( geom ))) as geom2 , ST_AsText (( ST_Dump ( ST_Polygonize ( geom ))). geom ) as geompl -- transforma a geom em POLYGON from arqueo . ue where id = 12 or id = 15 GROUP BY geom","title":"Converter"},{"location":"postgres/#apagar","text":"-- Apagar uma Coluna GEOM ALTER TABLE temp . linha DROP COLUMN geom ;","title":"Apagar"},{"location":"postgres/#transformacao-de-srids","text":"","title":"Transforma\u00e7\u00e3o de SRIDs"},{"location":"postgres/#grelhas-ntv2","text":"Transformar dados com o postgis -------------------------------------------------------- -- PROCEDIMENTO -------------------------------------------------------- ** 1 ** -- Colocar os ficheiros das grelhas (.gsb) na pasta utilizada pelo -- PROJ.4, cuja localiza\u00e7\u00e3o vai depender do Sistema Operativo utilizado: -- LINUX -- os ficheiros das grelhas colocam-se na pasta * / usr / share / proj / * -- confirmar -- reiniciar o postgres sudo service postgresql restart -- WINDOWS -- para o QGIS -- instalador OSGeo4W, * .. \\ OSGeo4W \\ share \\ proj -- ou intalador normal C : \\ Program Files \\ QGIS 3 . 6 \\ share \\ proj -- Para o Postgres/Postgis * C : \\ Program Files \\ PostgreSQL \\ 11 \\ share \\ contrib \\ postgis - 2 . 5 \\ proj -- reiniciar o postgres (Alt+R = services.msc) -- Uma outra alternativa \u00e9 verificar a path da vari\u00e1vel de ambiente PROJ_LIB -- e colocar os ficheiros nessa pasta. -------------------------------------------------------- ** 2 ** -- consultar os dados na tabela `spatial_ref_sys` SELECT * FROM spatial_ref_sys WHERE srid = 27492 OR srid = 27493 -- dados originais - dever\u00e3o ser os seguintes -- 27492 + proj = tmerc + lat_0 = 39 . 66666666666666 + lon_0 =- 8 . 131906111111112 + k = 1 + x_0 = 180 . 598 + y_0 =- 86 . 98999999999999 + ellps = intl + towgs84 =- 223 . 237 , 110 . 193 , 36 . 649 , 0 , 0 , 0 , 0 + units = m + no_defs -- 27493 + proj = tmerc + lat_0 = 39 . 66666666666666 + lon_0 =- 8 . 131906111111112 + k = 1 + x_0 = 180 . 598 + y_0 =- 86 . 98999999999999 + ellps = intl + towgs84 =- 223 . 237 , 110 . 193 , 36 . 649 , 0 , 0 , 0 , 0 + units = m + no_defs -------------------------------------------------------- ** 3 ** -- Actualiza\u00e7\u00e3o/sustitui\u00e7\u00e3o dos valores existentes temporariamente -- grelhas NTv2 - valores para o campo `srtext` + proj = tmerc + lat_0 = 39 . 66666666666666 + lon_0 =- 8 . 131906111111112 + k = 1 + x_0 = 180 . 598 + y_0 =- 86 . 98999999999999 + ellps = intl + nadgrids = D73_ETRS89_geo . gsb + wktext + units = m + no_defs -- actualizar para grelhas NTv2 executar: UPDATE spatial_ref_sys SET proj4text = '+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=180.598 +y_0=-86.98999999999999 +ellps=intl +nadgrids=D73_ETRS89_geo.gsb +wktext +units=m +no_defs' WHERE spatial_ref_sys . srid = 27493 ; -------------------------------------------------------- ** 4 ** ver 4 . 1 -- Actualizar as tabelas para `ETRS89` -- SQL para alterar sistema de coordenadas: -- Definir esquema.tabela e o tipo de geometria). ALTER TABLE * esquema * . * tabela * ALTER COLUMN geom TYPE geometry ( * Point * , 3763 ) USING ST_Transform ( geom , 3763 ); -- Testado ALTER TABLE teste . p_postgis ALTER COLUMN geom TYPE geometry ( MultiPolygon , 3763 ) USING ST_Transform ( geom , 3763 ); -------------------------------------------------------- ** 5 ** -- Repor os valores originais: UPDATE spatial_ref_sys SET proj4text = '+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=180.598 +y_0=-86.98999999999999 +ellps=intl +towgs84=-223.237,110.193,36.649,0,0,0,0 +units=m +no_defs' WHERE spatial_ref_sys . srid = 27493 ; -------------------------------------------------------- ** 4 . 1 ** -- OU criar uma nova entrada - outra forma de fazer -- Insert `274931` srid criado para teste INSERT INTO public . spatial_ref_sys ( srid , auth_name , auth_srid , srtext , proj4text ) VALUES ( 274931 , 'EPSG' , 274931 , 'PROJCS[\"7 - Datum73_Hayford_Gauss_Grelhas_DGT_27493\",GEOGCS[\"Datum 73\",DATUM[\"Datum_73\",SPHEROID[\"International 1924\",6378388,297,AUTHORITY[\"EPSG\",\"7022\"]],TOWGS84[-223.237,110.193,36.649,0,0,0,0],AUTHORITY[\"EPSG\",\"6274\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4274\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",39.66666666666666],PARAMETER[\"central_meridian\",-8.131906111111112],PARAMETER[\"scale_factor\",1],PARAMETER[\"false_easting\",180.598],PARAMETER[\"false_northing\",-86.99],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"X\",EAST],AXIS[\"Y\",NORTH],AUTHORITY[\"EPSG\",\"27493\"]]' , '+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=180.598 +y_0=-86.99 +ellps=intl +nadgrids=D73_ETRS89_geo.gsb +wktext +units=m +no_defs' ); -- consultar entrada criada SELECT * FROM public . spatial_ref_sys WHERE auth_srid = 274931 ;","title":"Grelhas NTv2"},{"location":"postgres/#transformacao-directa","text":"-- Datum 73 -> Datum LX SELECT ST_AsText ( ST_Transform ( ST_SetSRID ( ST_Makepoint ( - 28999 . 924 , - 135387 . 053 ), 27493 ), 20791 )); -- Saida POINT ( - 29000 . 0299819616 - 135387 . 25142969 ) -- Datum 73 -> PT-TM06 SELECT ST_AsText ( ST_Transform ( ST_SetSRID ( ST_Makepoint ( - 28999 . 924 , - 135387 . 053 ), 27493 ), 3763 )); -- Saida POINT ( - 28997 . 8232107334 - 135386 . 517692238 ) SELECT ST_AsEWKT ( st_setsrid ( ST_Transform ( ST_Transform ( ST_SetSRID ( ST_Point ( - 28999 . 924 , - 135387 . 053 ), 27493 ), 3763 ), 3763 ), 3763 )); -- Saida SRID = 3763 ; POINT ( - 28997 . 384862033 - 135386 . 750939952 ) SRID personalizado -- inserir o Sistema de Coordenadas -- 15 - Lisbon 1890 (Lisbon) / Portugal ellps=intl_SP -- para actualizar o \"EPSG 5018\" executar: -- N\u00e3o testado UPDATE spatial_ref_sys SET proj4text = '+proj=tmerc +lat_0=38.71369722222222 +lon_0=-9.133161111111111 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs' WHERE spatial_ref_sys . srid = 5018 ; UPDATE spatial_ref_sys SET srtext = 'PROJCS[\"unnamed\",GEOGCS[\"WGS 84\",DATUM[\"unknown\",SPHEROID[\"WGS84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",38.71369722222222],PARAMETER[\"central_meridian\",-9.133161111111111],PARAMETER[\"scale_factor\",1],PARAMETER[\"false_easting\",0],PARAMETER[\"false_northing\",0],UNIT[\"Meter\",1]]' WHERE spatial_ref_sys . srid = 5018 ; -- N\u00e3o testado UPDATE spatial_ref_sys SET proj4text = '+proj=tmerc +lat_0=38.71369722222222 +lon_0=-9.133161111111111 +k=1 +x_0=0 +y_0=0 +ellps=bessel +units=m +no_defs' WHERE spatial_ref_sys . srid = 5018 ; UPDATE spatial_ref_sys SET srtext = 'PROJCRS[\"Lisbon 1890 (Lisbon) / Portugal Bonne\",BASEGEODCRS[\"Lisbon 1890 (Lisbon)\",DATUM[\"Lisbon 1890 (Lisbon)\",ELLIPSOID[\"Bessel 1841\",6377397.155,299.1528128,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Lisbon\",-9.13190611111111,ANGLEUNIT[\"degree\",0.0174532925199433]]],CONVERSION[\"Portugal Bonne\",METHOD[\"Bonne (South Orientated)\",ID[\"EPSG\",9828]],PARAMETER[\"Latitude of natural origin\",39.6666666666667,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",1,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"False easting\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"southing (P)\",south,ORDER[1],LENGTHUNIT[\"metre\",1]],AXIS[\"westing (M)\",west,ORDER[2],LENGTHUNIT[\"metre\",1]],AREA[\"Portugal - mainland - onshore\"],BBOX[36.95,-9.56,42.16,-6.19],ID[\"EPSG\",2963]]' WHERE spatial_ref_sys . srid = 5018 ; -- dados originais -- 5018 UPDATE spatial_ref_sys SET proj4text = '+proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112 +k=1 +x_0=0 +y_0=0 +ellps=intl +towgs84=-304.046,-60.576,103.64,0,0,0,0 +units=m +no_defs ' WHERE spatial_ref_sys . srid = 5018 ; UPDATE spatial_ref_sys SET srtext = 'PROJCS[\"Lisbon / Portuguese Grid New\",GEOGCS[\"Lisbon\",DATUM[\"Lisbon_1937\",SPHEROID[\"International 1924\",6378388,297,AUTHORITY[\"EPSG\",\"7022\"]],TOWGS84[-304.046,-60.576,103.64,0,0,0,0],AUTHORITY[\"EPSG\",\"6207\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4207\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",39.66666666666666],PARAMETER[\"central_meridian\",-8.131906111111112],PARAMETER[\"scale_factor\",1],PARAMETER[\"false_easting\",0],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"X\",EAST],AXIS[\"Y\",NORTH],AUTHORITY[\"EPSG\",\"5018\"]]' WHERE spatial_ref_sys . srid = 5018 ;","title":"Transforma\u00e7\u00e3o directa"},{"location":"postgres/#raster","text":"","title":"Raster"},{"location":"postgres/#carregar-raster-para-a-base-de-dados","text":"Chapter 5. Raster Data Management, Queries, and Applications REM linhas de comandos a executar no local da instala\u00e7\u00e3o do postgres REM COM PIR\u00c2MIDES cd C:\\Program Files\\PostgreSQL\\11\\bin\\ raster2pgsql.exe -s 3763 -I -C -M -l 2,4,8,16,32,64,128,256 C:\\RASTER\\338_2_1942.tif -F -t 256x256 raster.338_2_1942_2 | psql -d arqvector -U postgres -p 5432 REM EXEMPLOS cd C:\\Program Files\\PostgreSQL\\11\\bin raster2pgsql.exe -c -C -I -M -Y -t 128x128 -s 3763 C:\\DEM.tif raster.dem10k > C:\\DEN.tif.sql raster2pgsql.exe -c -C -I -M -Y -t 128x128 -s 3763 C:\\DEM.tif raster.dem10k | psql -U postgres -d arqvector -h localhost -p5432 REM SRTM_PT_25m.tif cd C:\\Program Files\\PostgreSQL\\11\\bin raster2pgsql.exe -c -C -I -M -F -Y -t 100x100 -s 3763 C:\\RASTER\\SRTM_PT_25m.tif raster.srtm_pt_25m | psql -U postgres -d arqvector -h localhost -p5432 REM overview -l 2,4,8,16,32,64,128,256 REM LINUX raster2pgsql -s 3763 -I -C -M ORTOS_2015.tif -F -t 256x256 raster.ortos_2015 | psql -d sig-obidos -h localhost -U postgres -p 5432","title":"Carregar raster para a base de dados"},{"location":"postgres/#tutoriais","text":"GitHub - lcalisto/workshop-postgis-raster: Workshop to explain and exemplify the usage of PostGIS raster.","title":"Tutoriais"},{"location":"qgis/","text":"QGIS Fun\u00e7\u00f5es/propriedades/ajudas \u00fateis para QGIS QGIS Propriedades Layers Formul\u00e1rios Rela\u00e7\u00e3o cascata com filtro - Qgis3 Uni\u00f5es Field Calculator (Qfield) Datas Geometrias Pontos Diversos fun\u00e7\u00f5es de geometrias Outras fun\u00e7\u00f5es Substituir Pesquisa / filtro Compositor Impress\u00e3o Express\u00f5es Modelador gr\u00e1fico DEM/MDT Pontos para DEM Interpolate (Natural neighbor) Outras op\u00e7\u00f5es para teste Op\u00e7\u00f5es de interpola\u00e7\u00e3o QGIS: Op\u00e7\u00f5es de interpola\u00e7\u00e3o SAGA: Op\u00e7\u00f5es de interpola\u00e7\u00e3o GRASS: Drape (set Z value from raster) Calcular Subidas (ganho perda de uma linha) dos percursos Climb along line (Subir ao longo da linha) Plugin Profile Tool Plugins \u00fateis Quick Map Services Track Profile to Web Data Plotly Exemplos de configura\u00e7\u00f5es WKT Varia\u00e7\u00f5es de formato EWKT Propriedades Layers Formul\u00e1rios Rela\u00e7\u00e3o cascata com filtro - Qgis3 # \"CampoTabelaOrigemDados\" = current_value('CampoTabelaActual') \"caop.distrito\" = current_value ( 'fotos.distrito' ) # \"filtro\" = current_value('valor') \"distrito\" = current_value ( 'distrito' ) # o campo categoria existe nas duas tabelas \"categoria\" = current_value ( 'categoria' ) \"tipo\" = current_value ( 'tipo' ) As tabelas podem ter chave estrangeira Em fun\u00e7\u00e3o da categoria ser\u00e1 mostrado no campo tipo os valores filtrados para a categoria seleccionada. Uni\u00f5es Unir tabelas para diversas fun\u00e7\u00f5es consulta / actualiza\u00e7\u00e3o / etc.. Field Calculator (Qfield) Adicionar nova coluna f\u00edsica, virtual ou actualizar campo existente Exemplo para actualizar a geom existente Datas Formatar [ % format_date ( now (), 'dd-MM-yyyy' ) % ] # exemplo sa\u00edda: 17 - 10 - 2019 [ % format_date ( now (), 'ddd-MMM-yyyy' ) % ] # exemplo sa\u00edda: qui - out - 2019 [ % format_date ( now (), 'dddd-MMMM-yyyy' ) % ] # exemplo sa\u00edda: quinta - feira - outubro - 2019 Geometrias Pontos Actualizar/ver GEOM - ponto - com valores de colunas contendo coordenadas ver exemplos WKT geom_from_wkt ( 'POINT(' || \"x\" || ' ' || \"y\" || ')' ) # exemplo sa\u00edda: 'Point (-88313.122 -31330.397)' # actualizar a geom existente geom_from_wkt ( \"ColunaComGEOM_wkt\" ) geom_from_wkt ( \"poligono_wkt\" ) Remover o z da geometria ponto concat ( 'Point (' , $ x , ' ' , $ y , ')' ) Extrair a altimetria de um ponto z ( start_point ( $ geometry )) # exemplo sa\u00edda: 85.897 Diversos fun\u00e7\u00f5es de geometrias Um exemplo para actualizar geometria com geometria de outra tabela criar um novo campo wkt - por exemplo - na tabela que tem a geometria a ser usada com o Field Calculator criar um novo campo com o tipo de campo de sa\u00edda - texto utilizando a express\u00e3o geomToWKT($geometry) Outras fun\u00e7\u00f5es Adicionar zeros \u00e0 esquerda mais um valor concat ( 'ABC' || lpad ( \"id\" , 5 , '0' )) # exemplo sa\u00edda: ABC00001 ABC00123 Substituir replace ( \"coluna\" , 'pesquisa_valor' , 'novo_valor' ) regexp_replace ( \"coluna\" , ' *pesquisa_valor' , 'novo_valor' ) # exemplo: | coluna | +-----------------+ | isto_\u00e9_um_valor | replace ( \"coluna\" , '_valor' , '_novo' ) # exemplo sa\u00edda: | coluna | +-----------------+ | isto_\u00e9_um_novo | Pesquisa / filtro \"coluna\" LIKE '%valor_a_pesquisar%' \"Periodo\" LIKE '%Romano%' Compositor Impress\u00e3o Express\u00f5es Data agora # ver ponto das datas Modelador gr\u00e1fico Calcular Altimetria Subidas DEM/MDT Pontos para DEM Interpolate (Natural neighbor) Outras op\u00e7\u00f5es para teste https://gis.stackexchange.com/questions/118243/creating-dem-from-point-data-using-qgis Op\u00e7\u00f5es de interpola\u00e7\u00e3o QGIS: A ferramenta QGIS tem dispon\u00edveis de forma nativa os m\u00e9todos de interpola\u00e7\u00e3o TIN e IDW. Realmente n\u00e3o recomendaria nenhum desses m\u00e9todos, mas podem ser adequados para suas necessidades. interpola\u00e7\u00e3o TIN interpola\u00e7\u00e3o IDW Op\u00e7\u00f5es de interpola\u00e7\u00e3o SAGA: Atrav\u00e9s das ferramentas de processamento, o SAGA GIS (necess\u00e1rio instalar) fornece: interpola\u00e7\u00e3o Kriging interpola\u00e7\u00e3o Spline Op\u00e7\u00f5es de interpola\u00e7\u00e3o GRASS: Existem tamb\u00e9m v\u00e1rias op\u00e7\u00f5es muito robustas no GRASS GIS (tamb\u00e9m dispon\u00edveis nas ferramentas de processamento). \"r.surf.nnbathy\" - Natural_neighbor \"v.surf.bspline\" - B-splines \"v.surf.rst\" e \"v.vol.rst\" - splines regularizadas com tens\u00e3o \"v.krige\" - Krigagem (GRASS 7+) Drape (set Z value from raster) ver modelador gr\u00e1fico Extrair os valores de Z (raster) para a linha (vector) Calcular Subidas (ganho perda de uma linha) dos percursos ver modelador gr\u00e1fico Climb along line (Subir ao longo da linha) A linha tem que ter o valor de Z Plugin Profile Tool Ver tamb\u00e9m o plugin track profile to web Plugins \u00fateis Quick Map Services Quick Map Services Track Profile to Web Track Profile to Web Ver tamb\u00e9m o Plugin Profile Tool Data Plotly Data Plotly Exemplos de configura\u00e7\u00f5es WKT Tipo Exemplos Ponto POINT (30 10) Linha LINESTRING (30 10, 10 30, 40 40) Pol\u00edgono POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10)) Pol\u00edgono (buraco) POLYGON ((35 10, 45 45, 15 40, 10 20, 35 10), (20 30, 35 35, 30 20, 20 30)) Multi pontos MULTIPOINT ((10 40), (40 30), (20 20), (30 10)) MULTIPOINT (10 40, 40 30, 20 20, 30 10) Multi linhas MULTILINESTRING ((10 10, 20 20, 10 40), (40 40, 30 30, 40 20, 30 10)) Multi pol\u00edgonos MULTIPOLYGON (((30 20, 45 40, 10 40, 30 20)), ((15 5, 40 10, 10 20, 5 10, 15 5))) Pol\u00edgonos (buraco) MULTIPOLYGON (((40 40, 20 45, 45 30, 40 40)), ((20 35, 10 30, 10 10, 30 5, 45 20, 20 35), (30 20, 20 15, 20 25, 30 20))) Multi geometrias GEOMETRYCOLLECTION (POINT (40 10), LINESTRING (10 10, 20 20, 10 40), POLYGON ((40 40, 20 45, 45 30, 40 40))) Exemplos de strings WKT geom\u00e9tricas: (Observa\u00e7\u00e3o: cada item abaixo \u00e9 uma geometria individual.) GEOMETRYCOLLECTION ( PONTO ( 4 6 ), LINESTRING ( 4 6 , 7 10 )) PONTO ZM ( 1 1 5 60 ) PONTO M ( 1 1 80 ) PONTO VAZIO MULTIPOLYGON EMPTY TRI\u00c2NGULO (( 0 0 0 , 0 1 0 , 1 1 0 , 0 0 0 )) TIN ((( 0 0 0 , 0 0 1 , 0 1 0 , 0 0 0 )), (( 0 0 0 , 0 1 0 , 1 1 0 , 0 0 0 ))) POLYHEDRALSURFACE Z ( PATCHES (( 0 0 0 , 0 1 0 , 1 1 0 , 1 0 0 , 0 0 0 )), (( 0 0 0 , 0 1 0 , 0 1 1 , 0 0 1 , 0 0 0 )), (( 0 0 0 , 1 0 0 , 1 0 1 , 0 0 1 , 0 0 0 )), (( 1 1 1 , 1 0 1 , 0 0 1 , 0 1 1 , 1 1 1 )), (( 1 1 1 , 1 0 1 , 1 0 0 , 1 1 0 , 1 1 1 )), (( 1 1 1 , 1 1 0 , 0 1 0 , 0 1 1 , 1 1 1 )) ) Varia\u00e7\u00f5es de formato EWKT EWKT / EWKB - Texto / bin\u00e1rio Um formato espec\u00edfico do PostGIS que inclui o identificador do sistema de refer\u00eancia espacial (SRID) e at\u00e9 4 valores de ordenadas (XYZM). Exemplo: SRID=3763;POINT(-83809.1 -32338.2) para coordenada de longitude / latitude no sistema de coordenadas de refer\u00eancia PT-TM06/ETRS89 . SRID=4326;POINT(39.36321 -9.18935) para coordenada de longitude / latitude no sistema de coordenadas de refer\u00eancia WGS 84 . adaptado de: Well-known text representation of geometry - Wikipedia","title":"QGIS"},{"location":"qgis/#qgis","text":"Fun\u00e7\u00f5es/propriedades/ajudas \u00fateis para QGIS QGIS Propriedades Layers Formul\u00e1rios Rela\u00e7\u00e3o cascata com filtro - Qgis3 Uni\u00f5es Field Calculator (Qfield) Datas Geometrias Pontos Diversos fun\u00e7\u00f5es de geometrias Outras fun\u00e7\u00f5es Substituir Pesquisa / filtro Compositor Impress\u00e3o Express\u00f5es Modelador gr\u00e1fico DEM/MDT Pontos para DEM Interpolate (Natural neighbor) Outras op\u00e7\u00f5es para teste Op\u00e7\u00f5es de interpola\u00e7\u00e3o QGIS: Op\u00e7\u00f5es de interpola\u00e7\u00e3o SAGA: Op\u00e7\u00f5es de interpola\u00e7\u00e3o GRASS: Drape (set Z value from raster) Calcular Subidas (ganho perda de uma linha) dos percursos Climb along line (Subir ao longo da linha) Plugin Profile Tool Plugins \u00fateis Quick Map Services Track Profile to Web Data Plotly Exemplos de configura\u00e7\u00f5es WKT Varia\u00e7\u00f5es de formato EWKT","title":"QGIS"},{"location":"qgis/#propriedades-layers","text":"","title":"Propriedades Layers"},{"location":"qgis/#formularios","text":"","title":"Formul\u00e1rios"},{"location":"qgis/#relacao-cascata-com-filtro-qgis3","text":"# \"CampoTabelaOrigemDados\" = current_value('CampoTabelaActual') \"caop.distrito\" = current_value ( 'fotos.distrito' ) # \"filtro\" = current_value('valor') \"distrito\" = current_value ( 'distrito' ) # o campo categoria existe nas duas tabelas \"categoria\" = current_value ( 'categoria' ) \"tipo\" = current_value ( 'tipo' ) As tabelas podem ter chave estrangeira Em fun\u00e7\u00e3o da categoria ser\u00e1 mostrado no campo tipo os valores filtrados para a categoria seleccionada.","title":"Rela\u00e7\u00e3o cascata com filtro - Qgis3"},{"location":"qgis/#unioes","text":"Unir tabelas para diversas fun\u00e7\u00f5es consulta / actualiza\u00e7\u00e3o / etc..","title":"Uni\u00f5es"},{"location":"qgis/#field-calculator-qfield","text":"Adicionar nova coluna f\u00edsica, virtual ou actualizar campo existente Exemplo para actualizar a geom existente","title":"Field Calculator (Qfield)"},{"location":"qgis/#datas","text":"Formatar [ % format_date ( now (), 'dd-MM-yyyy' ) % ] # exemplo sa\u00edda: 17 - 10 - 2019 [ % format_date ( now (), 'ddd-MMM-yyyy' ) % ] # exemplo sa\u00edda: qui - out - 2019 [ % format_date ( now (), 'dddd-MMMM-yyyy' ) % ] # exemplo sa\u00edda: quinta - feira - outubro - 2019","title":"Datas"},{"location":"qgis/#geometrias","text":"","title":"Geometrias"},{"location":"qgis/#pontos","text":"Actualizar/ver GEOM - ponto - com valores de colunas contendo coordenadas ver exemplos WKT geom_from_wkt ( 'POINT(' || \"x\" || ' ' || \"y\" || ')' ) # exemplo sa\u00edda: 'Point (-88313.122 -31330.397)' # actualizar a geom existente geom_from_wkt ( \"ColunaComGEOM_wkt\" ) geom_from_wkt ( \"poligono_wkt\" ) Remover o z da geometria ponto concat ( 'Point (' , $ x , ' ' , $ y , ')' ) Extrair a altimetria de um ponto z ( start_point ( $ geometry )) # exemplo sa\u00edda: 85.897","title":"Pontos"},{"location":"qgis/#diversos-funcoes-de-geometrias","text":"Um exemplo para actualizar geometria com geometria de outra tabela criar um novo campo wkt - por exemplo - na tabela que tem a geometria a ser usada com o Field Calculator criar um novo campo com o tipo de campo de sa\u00edda - texto utilizando a express\u00e3o geomToWKT($geometry)","title":"Diversos fun\u00e7\u00f5es de geometrias"},{"location":"qgis/#outras-funcoes","text":"Adicionar zeros \u00e0 esquerda mais um valor concat ( 'ABC' || lpad ( \"id\" , 5 , '0' )) # exemplo sa\u00edda: ABC00001 ABC00123","title":"Outras fun\u00e7\u00f5es"},{"location":"qgis/#substituir","text":"replace ( \"coluna\" , 'pesquisa_valor' , 'novo_valor' ) regexp_replace ( \"coluna\" , ' *pesquisa_valor' , 'novo_valor' ) # exemplo: | coluna | +-----------------+ | isto_\u00e9_um_valor | replace ( \"coluna\" , '_valor' , '_novo' ) # exemplo sa\u00edda: | coluna | +-----------------+ | isto_\u00e9_um_novo |","title":"Substituir"},{"location":"qgis/#pesquisa-filtro","text":"\"coluna\" LIKE '%valor_a_pesquisar%' \"Periodo\" LIKE '%Romano%'","title":"Pesquisa / filtro"},{"location":"qgis/#compositor-impressao","text":"","title":"Compositor Impress\u00e3o"},{"location":"qgis/#expressoes","text":"Data agora # ver ponto das datas","title":"Express\u00f5es"},{"location":"qgis/#modelador-grafico","text":"Calcular Altimetria Subidas","title":"Modelador gr\u00e1fico"},{"location":"qgis/#demmdt","text":"","title":"DEM/MDT"},{"location":"qgis/#pontos-para-dem","text":"","title":"Pontos para DEM"},{"location":"qgis/#interpolate-natural-neighbor","text":"","title":"Interpolate (Natural neighbor)"},{"location":"qgis/#outras-opcoes-para-teste","text":"https://gis.stackexchange.com/questions/118243/creating-dem-from-point-data-using-qgis","title":"Outras op\u00e7\u00f5es para teste"},{"location":"qgis/#opcoes-de-interpolacao-qgis","text":"A ferramenta QGIS tem dispon\u00edveis de forma nativa os m\u00e9todos de interpola\u00e7\u00e3o TIN e IDW. Realmente n\u00e3o recomendaria nenhum desses m\u00e9todos, mas podem ser adequados para suas necessidades. interpola\u00e7\u00e3o TIN interpola\u00e7\u00e3o IDW","title":"Op\u00e7\u00f5es de interpola\u00e7\u00e3o QGIS:"},{"location":"qgis/#opcoes-de-interpolacao-saga","text":"Atrav\u00e9s das ferramentas de processamento, o SAGA GIS (necess\u00e1rio instalar) fornece: interpola\u00e7\u00e3o Kriging interpola\u00e7\u00e3o Spline","title":"Op\u00e7\u00f5es de interpola\u00e7\u00e3o SAGA:"},{"location":"qgis/#opcoes-de-interpolacao-grass","text":"Existem tamb\u00e9m v\u00e1rias op\u00e7\u00f5es muito robustas no GRASS GIS (tamb\u00e9m dispon\u00edveis nas ferramentas de processamento). \"r.surf.nnbathy\" - Natural_neighbor \"v.surf.bspline\" - B-splines \"v.surf.rst\" e \"v.vol.rst\" - splines regularizadas com tens\u00e3o \"v.krige\" - Krigagem (GRASS 7+)","title":"Op\u00e7\u00f5es de interpola\u00e7\u00e3o GRASS:"},{"location":"qgis/#drape-set-z-value-from-raster","text":"ver modelador gr\u00e1fico Extrair os valores de Z (raster) para a linha (vector)","title":"Drape (set Z value from raster)"},{"location":"qgis/#calcular-subidas-ganho-perda-de-uma-linha-dos-percursos","text":"ver modelador gr\u00e1fico","title":"Calcular Subidas (ganho perda de uma linha) dos percursos"},{"location":"qgis/#climb-along-line-subir-ao-longo-da-linha","text":"A linha tem que ter o valor de Z","title":"Climb along line (Subir ao longo da linha)"},{"location":"qgis/#plugin-profile-tool","text":"Ver tamb\u00e9m o plugin track profile to web","title":"Plugin Profile Tool"},{"location":"qgis/#plugins-uteis","text":"","title":"Plugins \u00fateis"},{"location":"qgis/#quick-map-services","text":"Quick Map Services","title":"Quick Map Services"},{"location":"qgis/#track-profile-to-web","text":"Track Profile to Web Ver tamb\u00e9m o Plugin Profile Tool","title":"Track Profile to Web"},{"location":"qgis/#data-plotly","text":"Data Plotly","title":"Data Plotly"},{"location":"qgis/#exemplos-de-configuracoes-wkt","text":"Tipo Exemplos Ponto POINT (30 10) Linha LINESTRING (30 10, 10 30, 40 40) Pol\u00edgono POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10)) Pol\u00edgono (buraco) POLYGON ((35 10, 45 45, 15 40, 10 20, 35 10), (20 30, 35 35, 30 20, 20 30)) Multi pontos MULTIPOINT ((10 40), (40 30), (20 20), (30 10)) MULTIPOINT (10 40, 40 30, 20 20, 30 10) Multi linhas MULTILINESTRING ((10 10, 20 20, 10 40), (40 40, 30 30, 40 20, 30 10)) Multi pol\u00edgonos MULTIPOLYGON (((30 20, 45 40, 10 40, 30 20)), ((15 5, 40 10, 10 20, 5 10, 15 5))) Pol\u00edgonos (buraco) MULTIPOLYGON (((40 40, 20 45, 45 30, 40 40)), ((20 35, 10 30, 10 10, 30 5, 45 20, 20 35), (30 20, 20 15, 20 25, 30 20))) Multi geometrias GEOMETRYCOLLECTION (POINT (40 10), LINESTRING (10 10, 20 20, 10 40), POLYGON ((40 40, 20 45, 45 30, 40 40))) Exemplos de strings WKT geom\u00e9tricas: (Observa\u00e7\u00e3o: cada item abaixo \u00e9 uma geometria individual.) GEOMETRYCOLLECTION ( PONTO ( 4 6 ), LINESTRING ( 4 6 , 7 10 )) PONTO ZM ( 1 1 5 60 ) PONTO M ( 1 1 80 ) PONTO VAZIO MULTIPOLYGON EMPTY TRI\u00c2NGULO (( 0 0 0 , 0 1 0 , 1 1 0 , 0 0 0 )) TIN ((( 0 0 0 , 0 0 1 , 0 1 0 , 0 0 0 )), (( 0 0 0 , 0 1 0 , 1 1 0 , 0 0 0 ))) POLYHEDRALSURFACE Z ( PATCHES (( 0 0 0 , 0 1 0 , 1 1 0 , 1 0 0 , 0 0 0 )), (( 0 0 0 , 0 1 0 , 0 1 1 , 0 0 1 , 0 0 0 )), (( 0 0 0 , 1 0 0 , 1 0 1 , 0 0 1 , 0 0 0 )), (( 1 1 1 , 1 0 1 , 0 0 1 , 0 1 1 , 1 1 1 )), (( 1 1 1 , 1 0 1 , 1 0 0 , 1 1 0 , 1 1 1 )), (( 1 1 1 , 1 1 0 , 0 1 0 , 0 1 1 , 1 1 1 )) )","title":"Exemplos de configura\u00e7\u00f5es WKT"},{"location":"qgis/#variacoes-de-formato-ewkt","text":"EWKT / EWKB - Texto / bin\u00e1rio Um formato espec\u00edfico do PostGIS que inclui o identificador do sistema de refer\u00eancia espacial (SRID) e at\u00e9 4 valores de ordenadas (XYZM). Exemplo: SRID=3763;POINT(-83809.1 -32338.2) para coordenada de longitude / latitude no sistema de coordenadas de refer\u00eancia PT-TM06/ETRS89 . SRID=4326;POINT(39.36321 -9.18935) para coordenada de longitude / latitude no sistema de coordenadas de refer\u00eancia WGS 84 . adaptado de: Well-known text representation of geometry - Wikipedia","title":"Varia\u00e7\u00f5es de formato EWKT"},{"location":"qgis_git/","text":"QGIS Fun\u00e7\u00f5es/propriedades/ajudas \u00fateis para QGIS QGIS Estilo grupo - tipo Leaflet.markercluster Estilo grupo - tipo Leaflet.markercluster Este exemplo foi inspirado no Leaflet.markercluster Nos estilos da camada selecionar o Grupo de pontos Duplicar o Marcador simples e abrir o editor de express\u00f5es No primeiro (superior) Marcador simples colocar a express\u00e3o: CASE WHEN @cluster_size > 12 THEN '253,156,115,153' -- cluster - large ( laranja ) WHEN @cluster_size > 6 THEN '240,194,12,153' -- cluster - medium ( amarelo ) ELSE '110,204,057,153' -- cluster - small ( verde ) END No segundo (inferior) Marcador simples colocar a express\u00e3o: CASE WHEN @cluster_size > 12 THEN '253,156,115,153' -- cluster - large ( laranja ) WHEN @cluster_size > 6 THEN '241,211,87,153' -- cluster - medium ( amarelo ) ELSE '181,226,140,153' -- cluster - small ( verde ) END","title":"QGIS"},{"location":"qgis_git/#qgis","text":"Fun\u00e7\u00f5es/propriedades/ajudas \u00fateis para QGIS QGIS Estilo grupo - tipo Leaflet.markercluster","title":"QGIS"},{"location":"qgis_git/#estilo-grupo-tipo-leafletmarkercluster","text":"Este exemplo foi inspirado no Leaflet.markercluster Nos estilos da camada selecionar o Grupo de pontos Duplicar o Marcador simples e abrir o editor de express\u00f5es No primeiro (superior) Marcador simples colocar a express\u00e3o: CASE WHEN @cluster_size > 12 THEN '253,156,115,153' -- cluster - large ( laranja ) WHEN @cluster_size > 6 THEN '240,194,12,153' -- cluster - medium ( amarelo ) ELSE '110,204,057,153' -- cluster - small ( verde ) END No segundo (inferior) Marcador simples colocar a express\u00e3o: CASE WHEN @cluster_size > 12 THEN '253,156,115,153' -- cluster - large ( laranja ) WHEN @cluster_size > 6 THEN '241,211,87,153' -- cluster - medium ( amarelo ) ELSE '181,226,140,153' -- cluster - small ( verde ) END","title":"Estilo grupo - tipo Leaflet.markercluster"},{"location":"teste/","text":"Diagrama https://mermaid-js.github.io/mermaid/#/ %%{init: {'theme':'base'}}%% graph TD A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; 4-->G; 2-->3; 6-->5; 6-->G; 2-->7; 3-->4; 3-->5; 5-->G; 7-->8; 1-->2; 8-->6; T-->1; graph TB sq[Square shape] --> ci((Circle shape)) subgraph A od>Odd shape]-- Two line<br/>edge comment --> ro di{Diamond with <br/> line break} -.-> ro(Rounded<br>square<br>shape) di==>ro2(Rounded square shape) end %% Notice that no text in shape are added here instead that is appended further down e --> od3>Really long text with linebreak<br>in an Odd shape] %% Comments after double percent signs e((Inner / circle<br>and some odd <br>special characters)) --> f(,.?!+-*\u0632) cyr[Cyrillic]-->cyr2((Circle shape \u041d\u0430\u0447\u0430\u043b\u043e)); classDef green fill:#9f6,stroke:#333,stroke-width:2px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; class sq,e green class di orange { % dot attack_plan . svg digraph { A [ label = \"King Arthur\" ] B [ label = \"Sir Bedevere the Wise\" ] L [ label = \"Sir Lancelot the Brave\" ] A -> B A -> L B -> L [ constraint = false ] } % } digraph { A [label=\"King Arthur\"] B [label=\"Sir Bedevere the Wise\"] L [label=\"Sir Lancelot the Brave\"] A -> B A -> L B -> L [constraint=false] } texto select from","title":"Teste"}]}